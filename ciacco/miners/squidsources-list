#!/usr/bin/perl
#
# HostWebTraffic Miner
# Copyright (C) 2014  Nethesis srl

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# @author Giovanni Bezicheri <giovanni.bezicheri@nethesis.it>
# @author Edoardo Spadoni <edoardo.spadoni@nethesis.it>

#
# HostWebTrafficMiner - a Miner to collect data about host traffic
#
#
use strict;
use warnings;
use JSON;
use POSIX qw(strftime);


my $limit = 10;
my $i = 0;
my $date = strftime "%Y%m%d", localtime;
my $total_file = "/var/lightsquid/$date/.total";
my @data;
my $anonymize = shift || "";

# run lightparser once
if (-f "/sbin/lightparser.pl" && ! -f $total_file) {
    system("/sbin/lightparser.pl -t /var/log/squid/access.log 2>/dev/null");
}

if (! -f $total_file) {
    exit 1;
}

if (-f $total_file) {
    open(my $fh, '<', $total_file);
    while (readline($fh)) {
        last if ($i>=$limit);
        if ($_ =~ /^tag_none/ || $_ =~ /^user:/ || $_ =~ /^size/) {
            # skip SSL connections and total lines
            next;
        } else {
            my ($host, $bytes, $conn, $other) = split(/\s+/, $_);
            if ($anonymize eq 'true') {
                push(@data, {count => int($bytes), name => "host$i"});
            } else {
                push(@data, {count => int($bytes), name => $host});
            }

            $i++;
        }
    }
    close($fh);
}

print encode_json({
        minderId => "squidsources-list",
        type => "list",
        data => \@data,
        unit => "bytes",
        aggregationType => "sum"
    });
